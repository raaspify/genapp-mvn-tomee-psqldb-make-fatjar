<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
                      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
                xmlns:fn="http://java.sun.com/jsp/jstl/functions"
                xmlns:p="http://primefaces.org/ui">
<html>
<h:head>  
 
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>#{customIdentity.owner2}- see the difference</title>
    <link href="stylesheet/3rcustom.css" rel="stylesheet" type="text/css" />
    <link href="stylesheet/jssocials.css" rel="stylesheet" type="text/css" />
    <link href="stylesheet/jssocials-theme-flat.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"/>
    <link rel="stylesheet" type="text/css"
          href="https://fonts.googleapis.com/css?family=Tangerine"/>
    <link rel="icon" type="image/x-icon" href="/img/favicon.ico"/>
    <meta name="keywords"
     content="trial,cloud,ecommerce,workflow,3R Computer Systems,raaspi,bar code,low cost,automation,alumni,association,business,manufacturing,apllication,turnkey"/>
    <meta name="alias" content="https://mystuffp-3rcomp.rhcloud.com"/>
    <meta name="owner" content="3rcomputer.com"/>
    <meta name="description" content="Unique cloud workflow solution to meet your needs"/>
    <meta name="robots" content="index,follow"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0"/> 
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-47438939-2', 'raaspi.com');
  ga('send', 'pageview');

</script>

</h:head>

    <ui:remove>
     Template did not work, so made it into one xhtml, based on mockUpPrevire but uses theme galleries not site data
<!-- Not Generated uses special menu ie via menuMockUpPreview and rtemplateMockUpPreview to call about-1P instead of about-1
     about-1P shows -C only if no -M ie will show preview change if available ie still complete page content 
     its more like Home page ie displays content rather than homeMockUp which allows content to be changed 
     jun072018 added -M 
     can be used for both old and simpler way of build pages because if no content it wont show
     but added existing but not used footer-1 part (site map purpose) 

-->
    </ui:remove>
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE"/>
<META HTTP-EQUIV="EXPIRES" CONTENT="Mon, 22 Jul 2002 11:12:01 GMT"/>
<f:metadata>
    <f:viewParam name="themeName" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.contentTheme}"/>
    <f:viewParam name="themeVendor" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.contentVendor}"/>
    <f:viewAction action="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.restrict()}" />
    <f:viewAction action="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.wire()}" />

</f:metadata>

<h:outputStylesheet>
.rf-tb {
    background-color:#{richSkin.tableSubHeaderBackgroundColor} !important;
    background-image: none; !important;
    color:#{richSkin.tableHeaderTextColor} !important;

}
.rf-cp-hdr {
    background-color:#{richSkin.generalBackgroundColor} !important;
    background-image: none; !important;
    color:#{richSkin.tableHeaderTextColor} !important;
    border-color:none;
    border:0;
}
.rf-p-hdr {
    background-color:#{a4jSkin.generalBackgroundColor} !important;
    background-image: none; !important;
    color:#{a4jSkin.tableHeaderTextColor} !important;
    border-color:none;
    border:0;
}


</h:outputStylesheet>
<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  var aid;
   //alert(window.location.href);
  if (window.location.href.indexOf(".l3r") > -1) {
   aid = "1493497040950348";
  } else {
   aid = "462928240562239";
  }
   //alert(aid);
  FB.init({
    appId      : aid,
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.4' // use version 2.2
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      onFbLogin(response.id, response.email, response.name, response.first_name, response.last_name, response.gender);
      document.getElementById('status').innerHTML = 'Welcome Facebook User '+response.name ;
      //final response to user will come from server
    });
  }
  function Logout() {
  FB.logout(function () { document.location.reload(); });
   document.getElementById('status').innerHTML = 'Logged out of Facebook' ;
  }
</script>
<script>
$(document).ready(function(){
//alert (window.location);
// img2 is seq2 and img is seq1 put 1 first and then 2 if needed
jQuery("#asishdrbkimg2").fadeOut(0);jQuery("#asishdrbkimg").delay(10000).fadeOut(3000);jQuery("#header").delay(10000).fadeOut(3000);jQuery("#asishdrbkimg2").delay(10000).fadeIn(0);jQuery("#asishdrbkimg2").delay(10000).fadeOut(3000);
});
</script>
<f:metadata>
    <f:event type="preRenderView" listener="#{skinBean.setCurrentSkin}" />
</f:metadata>

<h:body >
    <h:form id="preview">
    <h:panelGrid columns="2">
     <p:panel>
      <h:panelGrid columns="4">
           
            <h:panelGrid columns="1">
             <h:graphicImage value="/img/Designview_256.png" height="50">
             </h:graphicImage>
             <h:graphicImage value="/img/Designview_256.png" height="50">
             </h:graphicImage>
            </h:panelGrid>&nbsp;
            <h:graphicImage value="/img/Search_256.png" height="50">
            </h:graphicImage>
            <h:graphicImage value="/img/Photos_256.png" height="100">
            </h:graphicImage>
      </h:panelGrid>
     </p:panel>
        <h:outputText value="#{messages['migrate']} #{messages['pages']} #{messages['from']} #{messages['existing']} #{messages['site']}"/>
        <h:panelGrid columns="6">
        <ui:remove> vendor is redundand since item misccode1 has the vendorcode. pass themecode which
         is item key. get instance from key and set vendor in backing bean
         <h:outputLabel  for="vendormd" value="#{messages['vendor']} #{messages['name']}" rendered="true">
         </h:outputLabel>
                 <h:selectOneMenu  id="vendormd" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.contentVendor}" 
                  rendered="true">
                    <f:selectItems value="#{fpxxfq1a5xwwqqhxxxxxitemList.getSuggestListTheme('','')}" var="result"
                     itemValue="#{result.y2xxuxxrbvxxxxxxxxxxmisccode1}" itemLabel="#{result.y2xxuxxrbvxxxxxxxxxxmisccode1}" />
                 </h:selectOneMenu>
        </ui:remove> 
         <h:outputLabel  for="contentThememd" value="#{messages['old']} #{messages['site']} #{messages['url']}" rendered="true">
         </h:outputLabel>
                <h:panelGroup>
                 <h:inputText  id="contentThememd" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.contentTheme}" 
                  rendered="true" pt:placeholder="http://xyz.com">
                 </h:inputText>
                 <p:tooltip target="contentThememd"> <span style="white-space: nowrap"> <h:outputText value="#{messages['Needs']} #{messages['http']} | #{messages['https']} #{messages['prefix']}"/></span> </p:tooltip> 

                 &#160;&#160;<h:commandButton id="scrape" rendered="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.clientUpdateCounter(0)==null or yxxxuq1m1xwwqqqxxxxxclobdataHome.clientUpdateCounter(0)==0}"
                   value="&#160;&#160;#{messages['Migrate']} #{messages['pages']}" status="buttonStatus"
                   action="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.setContentThemeAndMigrateUi(yxxxuq1m1xwwqqqxxxxxclobdataHome.contentTheme)}">
                 </h:commandButton>
                 &nbsp;<h:commandButton id="scrapem" rendered="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.clientUpdateCounter(0)>0}"
                   value="&#160;&#160;   #{messages['Migrate']} #{messages['more']} #{messages['pages']}" status="buttonStatus"
                   action="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.setContentThemeAndMigrateUi(yxxxuq1m1xwwqqqxxxxxclobdataHome.contentTheme)}">
                 </h:commandButton>
             <p:ajaxStatus name="buttonStatus" >
              <f:facet name="start">
               <h:graphicImage value="./img/ajax-loader16.gif" />
              </f:facet>
             </p:ajaxStatus>

                 &#160;&#160;<h:link  
                   value="#{messages['Preview']} #{messages['as']} #{messages['Mid']} #{messages['Home']} #{messages['page']}" 
                   outcome="homePageEditor.wflow" fragment="home_mid" target="_blank">
                </h:link>
                 &#160;&#160;<h:link  
                   value="#{messages['Preview']} #{messages['as']} #{messages['Other']} #{messages['pages']}" 
                   outcome="homeOtherPagesEdtr.wflow" fragment="product1" target="_blank">
                </h:link>
                 &#160;&#160;&nbsp;<h:link  
                   value="#{messages['Reset']} #{messages['migration']} #{messages['counter']}" 
                   outcome="clientList.wflow" target="_blank">
                </h:link>
                </h:panelGroup>

       </h:panelGrid>
       <br></br><br></br>
       <p:panel toggleable="true" style="width: 100%;"  header="#{messages['Tips']}: " switchType="client" collapsed="true" 
           leftCollapsedIcon="/img/control_add16.png" leftExpandedIcon="/img/control_remove16.png">

         <h:outputText value="#{messages['Normally']} #{messages['full']} #{messages['url']} (http://www.example.com), #{messages['entered']} #{messages['here']}, #{messages['should']} #{messages['point']} #{messages['to']} #{messages['Home']} #{messages['or']} #{messages['Landing']} #{messages['page']} #{messages['and']} #{messages['Migrate']} #{messages['will']} #{messages['first']} #{messages['copy']} #{messages['Home']} #{messages['or']} #{messages['Landing']} #{messages['page']} #{messages['contents']} #{messages['including']} #{messages['images']} "/>
        <br></br><h:outputText value="#{messages['and ']} #{messages['then']} #{messages['continue']} #{messages['with']} #{messages['the']} #{messages['other']} #{messages['pages']}. "/>
        <br></br><br></br><h:outputText value="#{messages['However']} #{messages['to']} #{messages['allow']} #{messages['for']} #{messages['checking']} #{messages['the']} #{messages['outcome']}, #{messages['it']} #{messages['will']} #{messages['pause']} #{messages['as']} #{messages['needed']}. "/>
        <br></br><h:outputText value="#{messages['Please']} #{messages['wait']} #{messages['and']} #{messages['check']} #{messages['the']} #{messages['message(s)']} #{messages['above']} #{messages['for']} #{messages['completion']} #{messages['and']} #{messages['then']} #{messages['preview']} #{messages['the']} #{messages['outcome']} #{messages['and']} #{messages['continue']} #{messages['with']} #{messages['the']} #{messages['remaining']} #{messages['pages']}. "/>
        <br></br><h:outputText value="#{messages['To']} #{messages['scan']} #{messages['from']} #{messages['start']}, #{messages['click']} #{messages['reset']} #{messages['counter']}, #{messages['edit']} #{messages['record']} #{messages['01']} #{messages['enter']} 0 #{messages['in']} #{messages['migrate']} #{messages['counter']} "/>
        <br></br><br></br><br></br><h:outputText value="#{messages['Note']}: #{messages['Your']} #{messages['new']} #{messages['site']} #{messages['pages']} #{messages['are']} #{messages['not']} #{messages['static']}, #{messages['rather']} #{messages['content']} #{messages['based']} #{messages['dynamic']} #{messages['pages']} #{messages['and']} #{messages['content']} #{messages['stored']} #{messages['as']} #{messages['database']} #{messages['records']}. "/>

       </p:panel>
       <br></br><br></br>
   
       <h:outputText value="#{messages['By']} #{messages['default']}, #{messages['migration']} #{messages['maps']}  #{messages['any']} #{messages['page']} #{messages['url']} #{messages['containing']}  #{messages['the']} #{messages['word']} #{messages['say']} #{messages['news']} #{messages['to']} #{messages['RAASPI']} #{messages['page']} #{messages['News']}, #{messages['contact']} #{messages['to']} #{messages['contactUs']}"/>
       <br></br><br></br>       
       <h:outputText value="(#{messages['Optional']}) #{messages['To']} #{messages['map']} #{messages['old']} #{messages['to']} #{messages['new']}"/>
       <br></br>
       <h:panelGrid columns="#{yxxxuh566xwwqqwxxxxxuserHome.mobile?5:10}">
         <h:outputLabel  for="opageId1" value="#{messages['old']} #{messages['site']} #{messages['page']} #{messages['url']}" rendered="true">
         </h:outputLabel>
         <h:inputText  id="opageId1" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.fromPageP}" 
          rendered="true" pt:placeholder="/ourInfo.php">
         </h:inputText>
         <h:outputLabel  for="pageId1" value="#{messages['New']} #{messages['site']} #{messages['Product']} #{messages['page']}" rendered="true">
         </h:outputLabel>
         <h:panelGroup>
          <h:selectOneMenu  id="pageId1" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.toPageP}" 
                  rendered="true">
           <f:selectItem itemValue="#{null}" itemLabel="-- select one --" />
           <f:selectItem id="item1P" itemLabel="#{messages['Product']}" itemValue="/Product-1" />
          </h:selectOneMenu>
         </h:panelGroup>
       </h:panelGrid>
       <br></br>
       <h:panelGrid columns="#{yxxxuh566xwwqqwxxxxxuserHome.mobile?5:10}">
         <h:outputLabel  for="opageId2" value="#{messages['Old']} #{messages['page']} #{messages['url']}" rendered="true">
         </h:outputLabel>
         <h:inputText  id="opageId2" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.fromPageN}" 
          rendered="true" pt:placeholder="/whatsnew.html">
         </h:inputText>
         <h:outputLabel  for="pageId2" value="#{messages['New']} #{messages['News']} #{messages['page']}" rendered="true">
         </h:outputLabel>
                <h:panelGroup>
                 <h:selectOneMenu  id="pageId2" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.toPageN}" 
                  rendered="true">
           <f:selectItem itemValue="#{null}" itemLabel="-- select one --" />
           <f:selectItem id="item2N" itemLabel="#{messages['News']}" itemValue="/News-1" /> 
                 </h:selectOneMenu>
                </h:panelGroup>
       </h:panelGrid>
       <br></br>
       <h:panelGrid columns="#{yxxxuh566xwwqqwxxxxxuserHome.mobile?5:10}">

         <h:outputLabel  for="opageId3" value="#{messages['Old']} #{messages['page']} #{messages['url']}" rendered="true">
         </h:outputLabel>
         <h:inputText  id="opageId3" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.fromPageA}" 
          rendered="true" pt:placeholder="/explore/finance">
         </h:inputText>
         <h:outputLabel  for="pageId3" value="#{messages['New']} #{messages['About']} #{messages['page']}" rendered="true">
         </h:outputLabel>
                <h:panelGroup>
                 <h:selectOneMenu  id="pageId3" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.toPageA}" 
                  rendered="true">
           <f:selectItem itemValue="#{null}" itemLabel="-- select one --" />
           <f:selectItem id="item3A" itemLabel="#{messages['About']}" itemValue="/About-1" />
                 </h:selectOneMenu>
                </h:panelGroup>
      </h:panelGrid>
       <br></br>
       <h:panelGrid columns="#{yxxxuh566xwwqqwxxxxxuserHome.mobile?5:10}">

         <h:outputLabel  for="opageId4" value="#{messages['Old']} #{messages['page']} #{messages['url']}" rendered="true">
         </h:outputLabel>
         <h:inputText  id="opageId4" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.fromPageC}" 
          rendered="true" pt:placeholder="/contact">
         </h:inputText>
         <h:outputLabel  for="pageId4" value="#{messages['New']} #{messages['ContactUs']} #{messages['page']}" rendered="true">
         </h:outputLabel>
                <h:panelGroup>
                 <h:selectOneMenu  id="pageId4" value="#{yxxxuq1m1xwwqqqxxxxxclobdataHome.toPageC}" 
                  rendered="true">
           <f:selectItem itemValue="#{null}" itemLabel="-- select one --" />
           <f:selectItem id="item4C" itemLabel="#{messages['ContactUs']}" itemValue="/ContactUs-1" />
                 </h:selectOneMenu>
                </h:panelGroup>
      </h:panelGrid>

     </h:panelGrid>
    <h:messages globalOnly="true" styleClass="message"/>
    <br></br>
    <h:button value="#{messages['done']} "  outcome="/home.xhtml" />
    <ui:remove> 
    &nbsp;<h:button id="tdoneh" image="./img/home_24.png"  alt="Home" value="Home"  outcome="/home.xhtml" />
    </ui:remove>
    &nbsp;<h:button id="tdoneh" value="Home"  outcome="/home.xhtml" />
    </h:form>


</h:body >
</html>

</ui:composition>

